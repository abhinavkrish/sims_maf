Installation instructions for the Metric Analysis Framework:

Requirements:
---------------------------------------
Python
    numpy
    scipy
    matplotlib
    pyfits
    healpy: https://github.com/healpy/healpy 
    SQLAlchemy:  http://www.sqlalchemy.org/download.html
    pyslalib (for astrometric metrics):  https://github.com/scottransom/pyslalib

LSST Stack:  
    Base
    pexConfig
    catalogs
    maf


Recommendation for install:
---------------------------
If you are installing on a Mac, we recommend using one of the common Python package managers.  It is important to build all the MAF dependencies consistently so there are not conflicts between compilers and linked libraries.

Example installing Python requirements with Anaconda (recommended?):
-----------------------
1) Install the anaconda package.  Anaconda includes numpy, scipy, matplotlib, sqlalchemy, and pyfits (via astropy).  Anaconda is available from:  https://store.continuum.io/cshop/anaconda/

2) Set your path to ensure the anaconda tools are first in your path.  For example, add the following line to your .bashrc file:
PATH=~/anaconda/bin:PATH

3) Check that you have the anaconda install tools first in your path:
>which easy_install
/Users/<you>/anaconda/bin/easy_install

4) Use easy_install to get healpy:
>easy_install healpy

5) (optional) install pyslalib from source.  https://github.com/scottransom/pyslalib


Installing the LSST Stack:
------------------------
Follow the instructions for your particular system at:
https://dev.lsstcorp.org/trac/wiki/Installing

Installing MAF:
---------------
After installing the LSST stack and setting up your environment (by sourcing loadLSST.sh), create a sandbox for holding the MAF code:
>cd
>mkdir LSST_box
>cd LSST_box
>mkdir sandbox
>cd DarwinX86 #or whatever platform you happen to be on

clone the code from git:
>git clone git@git.lsstcorp.org:LSST/sims/operations/maf.git LSST/sims/operations/maf
>git clone git@git.lsstcorp.org:LSST/sims/operations/catalogs/generation.git LSST/sims/operations/generation
>git clone git@git.lsstcorp.org:LSST/sims/operations/catalogs/measures.git LSST/sims/operations/measures
>git clone git@git.lsstcorp.org:LSST/sims/throughputs.git LSST/sims/operations/throughputs

Setup the code from git:
>cd ~/LSST_box/DarwinX86/LSST/sims/catalogs/generation
>setup -j -r .
>scons opt=3
>cd ~/LSST_box/DarwinX86/LSST/sims/catalogs/measures
>setup -j -r .
>scons opt=3
>cd ~/LSST_box/DarwinX86/LSST/sims/throughputs
>setup -j -r .
>cd ~/LSST_box/DarwinX86/LSST/sims/operations/maf
>setup -j -r .
>scons opt=3

Declare the packages:
>eups declare -r ~/LSST_box/DarwinX86/LSST/sims/catalogs/generation sims_catalogs_generation 1.0 --nolock
>eups declare -r ~/LSST_box/DarwinX86/LSST/sims/catalogs/measures sims_catalogs_measures 1.0 --nolock
>eups declare -r ~/LSST_box/DarwinX86/LSST/sims/throughputs throughputs 1.0 --nolock
>eups declare -r ~/LSST_box/DarwinX86/LSST/sims/operations/maf sims_operations_maf 1.0 --nolock


Known Issues:
-------------
*Healpy can fail to install if there is an old version of Xcode present.  The latest version of Xcode does not need the /Developer directory, so try moving that and installing again.  Also in Xcode, go to Xcode->preferences->Downloads and get the latest Command Line Tools
*The LSST stack does not yet compile on OSX 9.  This should be solved shortly.


Running Examples:
-----------------
Make sure your environment is set up:
>source /path/to/lsst/stuff/loadLSST.sh
>setup maf

For the test scripts, we assume a ~/dbLogin file.  If you are using opsim sqlite files, just issue the following:
>echo SQLITE_OPSIM sqlite:///opsim.sqlite >> ~/dbLogin

go to the examples directory:
>cd ~/LSST_box/DarwinX86/LSST/sims/operations/maf/examples

copy an opsim sqlite file
>curl XXX

run the example scripts:
>python test_healpix.py opsim3_61
>python test_opsimfields.py opsim3_61
>python time_metrics.dat opsim3_61

try out the driver script.  Output plots and save-files are put in the Plots directory:
>cd driver
>ln -s ../opsim.sqlite .
>python runConfig.py allBinnerCfg.py
>python runConfig.py starDriver.py #This replicates most SSTAR plots and takes ~6 hr to run







 LocalWords:  matplotlib sqlalchemy pyfits astropy bashrc healpy pyslalib sudo
 LocalWords:  macports python27 py py27 LSST numpy scipy SQLAlchemy astrometric
 LocalWords:  pexConfig maf loadLSST cd mkdir DarwinX86 scons eups sims nolock
 LocalWords:  throughputs Xcode OSX opsim sqlite healpix opsim3 opsimfields dat
 LocalWords:  ln runConfig allBinnerCfg starDriver SSTAR
